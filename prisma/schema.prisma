generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String?
  role      UserRole @default(VIEWER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts     Post[]

  @@map("users")
}

model Category {
  id        String    @id @default(uuid())
  name      String
  slug      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  posts     Post[]

  @@map("categories")
}

model Post {
  id           String     @id @default(uuid())
  title        String
  slug         String     @unique
  content      String?
  status       PostStatus @default(DRAFT)
  categoryId   String?
  authorId     String
  coverMediaId String?
  publishedAt  DateTime?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  deletedAt    DateTime?
  author       User       @relation(fields: [authorId], references: [id])
  category     Category?  @relation(fields: [categoryId], references: [id])
  coverMedia   Media?     @relation(fields: [coverMediaId], references: [id])

  @@map("posts")
}

model Page {
  id        String   @id @default(uuid())
  title     String
  slug      String   @unique
  content   Json
  published Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("pages")
}

model Media {
  id        String   @id @default(uuid())
  filename  String
  url       String
  mimeType  String
  createdAt DateTime @default(now())
  posts     Post[]

  @@map("media")
}

enum UserRole {
  ADMIN
  EDITOR
  VIEWER
}

enum PostStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}
